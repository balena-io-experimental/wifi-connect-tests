# Fin image contains → 1 container (Exclave Testing) →  Exclave (requires rust), node, NPM, codecept, balenaSDK, testbotSDK, balenaCLI, credentials for the CLI and NPM token in secrets

# FROM debian:buster-slim
FROM balenalib/fincm3-debian:run

# build args (override with --build-arg NAME=VAL)
ARG RUST_VERSION=1.31
ARG NODE_VERSION=12.6.0
ARG BALENA_CLI_VERSION=12.32.0
ARG EXCLAVE_VERSION=v0.2.6

# set debconf to run non-interactively
ENV DEBIAN_FRONTEND noninteractive
ENV UDEV=1
ENV DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket

# hadolint ignore=DL3008, added nano for debugging, remove in final build
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        python \
        git \
        network-manager \
        nano \
        apt-transport-https \
        ca-certificates \
        curl \
        git \
        wget && \
    apt-get clean && rm -rf /var/lib/apt/lists/* && \
	systemctl mask NetworkManager.service

# set the SHELL option -o pipefail before RUN with a pipe in
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# use the official docker-ce installer that only supports up to buster for now
RUN curl -fsSL https://get.docker.com | bash

# overlay2 requires a docker volume for graph
VOLUME /var/lib/docker

# install nvm with node and npm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash

# add npm to path
ENV PATH /root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}

# install balena cli
RUN npm install balena-cli@${BALENA_CLI_VERSION} -g --production --unsafe-perm

# install rust
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y --default-toolchain ${RUST_VERSION}

# add rust to path
ENV PATH /root/.cargo/bin:${PATH}

WORKDIR /usr/src/exclave

# clone exclave
RUN git clone https://github.com/exclave/exclave . && \
    git checkout ${EXCLAVE_VERSION} && \
    cargo build

# copy source files
COPY . /usr/src/core/

# NPM install
RUN  res=0; ( cp /run/secrets/.npmrc /usr/src/core/ && npm install --prefix /usr/src/core/ ) || res=1; rm /usr/src/core/.npmrc; exit $res 

#  enable execute permissions for scripts
RUN	chmod +x /usr/src/core/entry.sh && \
    chmod +x /usr/src/core/logic/scripts/*.sh && \
    chmod +x /usr/src/core/logic/scripts/*.bash

CMD ["/usr/src/core/entry.sh"]
